// Generated by view binder compiler. Do not edit!
package com.example.tokovapor2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tokovapor2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVaporsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addressTextView7;

  @NonNull
  public final TextView amountgoodsTextView10;

  @NonNull
  public final TextView goodsTextView8;

  @NonNull
  public final TextView nameTextView6;

  @NonNull
  public final TextView typeTextView9;

  private ItemVaporsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addressTextView7,
      @NonNull TextView amountgoodsTextView10, @NonNull TextView goodsTextView8,
      @NonNull TextView nameTextView6, @NonNull TextView typeTextView9) {
    this.rootView = rootView;
    this.addressTextView7 = addressTextView7;
    this.amountgoodsTextView10 = amountgoodsTextView10;
    this.goodsTextView8 = goodsTextView8;
    this.nameTextView6 = nameTextView6;
    this.typeTextView9 = typeTextView9;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVaporsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVaporsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_vapors, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVaporsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressTextView7;
      TextView addressTextView7 = ViewBindings.findChildViewById(rootView, id);
      if (addressTextView7 == null) {
        break missingId;
      }

      id = R.id.amountgoodsTextView10;
      TextView amountgoodsTextView10 = ViewBindings.findChildViewById(rootView, id);
      if (amountgoodsTextView10 == null) {
        break missingId;
      }

      id = R.id.goodsTextView8;
      TextView goodsTextView8 = ViewBindings.findChildViewById(rootView, id);
      if (goodsTextView8 == null) {
        break missingId;
      }

      id = R.id.nameTextView6;
      TextView nameTextView6 = ViewBindings.findChildViewById(rootView, id);
      if (nameTextView6 == null) {
        break missingId;
      }

      id = R.id.typeTextView9;
      TextView typeTextView9 = ViewBindings.findChildViewById(rootView, id);
      if (typeTextView9 == null) {
        break missingId;
      }

      return new ItemVaporsBinding((ConstraintLayout) rootView, addressTextView7,
          amountgoodsTextView10, goodsTextView8, nameTextView6, typeTextView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
